RTL 
module ripple_carry_adder(
    input [3:0] A, B,  
    input Cin,        
    output [3:0] Sum, 
    output Cout);       
    wire C1, C2, C3;  
    full_adder fa0 (A[0], B[0], Cin, Sum[0], C1);
    full_adder fa1 (A[1], B[1], C1, Sum[1], C2);
    full_adder fa2 (A[2], B[2], C2, Sum[2], C3);
    full_adder fa3 (A[3], B[3], C3, Sum[3], Cout);
endmodule
module full_adder(
    input A, B, Cin,     
    output Sum, Cout );   
    assign {Cout, Sum} = A + B + Cin;
endmodule



TESTBENCH 
module test_bench;
    reg [3:0] A, B;  
    reg Cin;         
    wire [3:0] Sum;  
    wire Cout;        
    ripple_carry_adder rca (A, B, Cin, Sum, Cout);
    initial begin
        A = 4'b0000; B = 4'b0000; Cin = 0; #10;
        A = 4'b0001; B = 4'b0001; Cin = 0; #10;
        A = 4'b0010; B = 4'b0011; Cin = 1; #10;
        A = 4'b1111; B = 4'b1111; Cin = 1; #10;
        $finish;
    end
    initial begin
        $monitor("A=%b B=%b Cin=%b | Sum=%b Cout=%b", A, B, Cin, Sum, Cout);
    end
endmodule
